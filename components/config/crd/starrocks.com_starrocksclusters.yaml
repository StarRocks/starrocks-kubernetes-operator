---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: starrocksclusters.starrocks.com
spec:
  group: starrocks.com
  names:
    kind: StarRocksCluster
    listKind: StarRocksClusterList
    plural: starrocksclusters
    shortNames:
    - src
    singular: starrockscluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.starRocksFeStatus.phase
      name: FeStatus
      type: string
    - jsonPath: .status.starRocksCnStatus.phase
      name: CnStatus
      type: string
    - jsonPath: .status.starRocksBeStatus.phase
      name: BeStatus
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StarRocksCluster defines a starrocks cluster deployment.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired state of the starrocks cluster.
            properties:
              serviceAccount:
                description: Specify a Service Account for starRocksCluster use k8s
                  cluster.
                type: string
              starRocksBeSpec:
                description: StarRocksBeSpec define be configuration of the starrocks
                  cluster.
                properties:
                  ReplicaInstances:
                    description: ReplicaInstance is the names of replica starrocksbe
                      cluster.
                    items:
                      type: string
                    type: array
                  configMapInfo:
                    description: the reference for be configMap.
                    properties:
                      configMapName:
                        description: the config info for start progress.
                        type: string
                      resolveKey:
                        description: the config response key in configmap.
                        type: string
                    type: object
                  image:
                    description: Image for a starrocks be deployment.
                    type: string
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  name:
                    description: name of the starrocks be cluster.
                    pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                    type: string
                  probe:
                    description: Probe defines the mode probe service in container
                      is alive.
                    properties:
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated. Default to 10 seconds.
                        format: int32
                        minimum: 0
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to Kubernetes default (10 seconds). Minimum value
                          is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      type:
                        description: Type identifies the mode of probe main container
                        enum:
                        - tcp
                        - command
                        type: string
                    required:
                    - type
                    type: object
                  replicas:
                    description: Replicas is the number of desired be Pod. the default
                      value=3 Optional
                    format: int32
                    type: integer
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  service:
                    description: Service defines the template for the associated Kubernetes
                      Service object. the service for user access be.
                    properties:
                      name:
                        description: Name assigned to service.
                        pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                        type: string
                      ports:
                        description: Ports the components exposed ports and listen
                          ports in pod.
                        items:
                          properties:
                            containerPort:
                              description: ContainerPort the service listen in pod.
                              format: int32
                              type: integer
                            name:
                              description: Name of the map about coming port and target
                                port
                              type: string
                            nodePort:
                              description: The easiest way to expose fe, cn or be
                                is to use a Service of type `NodePort`.
                              format: int32
                              type: integer
                            port:
                              description: Port the pod is exposed on service.
                              format: int32
                              type: integer
                          required:
                          - containerPort
                          - port
                          type: object
                        type: array
                      type:
                        description: 'type of service,the possible value for the service
                          type are : ClusterIP, NodePort, LoadBalancer,ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                        type: string
                    type: object
                  storageVolumes:
                    description: StorageVolumes defines the additional storage for
                      fe.
                    items:
                      description: StorageVolume defines additional PVC template for
                        StatefulSets and volumeMount for pods that mount this PVC
                      properties:
                        mountPath:
                          description: MountPath specify the path of volume mount.
                          type: string
                        name:
                          description: name of a storage volume.
                          pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                          type: string
                        storageClassName:
                          description: 'storageClassName is the name of the StorageClass
                            required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        storageSize:
                          description: 'StorageSize is a valid memory size type based
                            on powers-of-2, so 1Mi is 1024Ki. Supported units:Mi,
                            Gi, GiB, Ti, Ti, Pi, Ei, Ex: `512Mi`.'
                          pattern: (^0|([0-9]*l[.])?[0-9]+((M|G|T|E|P)i))$
                          type: string
                      required:
                      - name
                      - storageSize
                      type: object
                    type: array
                required:
                - image
                type: object
              starRocksCnSpec:
                description: StarRocksCnSpec define cn configuration of the starrocks
                  cluster.
                properties:
                  autoScalingPolicy:
                    description: AutoScalingPolicy auto scaling strategy
                    properties:
                      hpaPolicy:
                        description: the policy of
                        properties:
                          behavior:
                            description: HorizontalPodAutoscalerBehavior configures
                              the scaling behavior of the target
                            properties:
                              scaleDown:
                                description: scaleDown is scaling policy for scaling
                                  Down. If not set, the default value is to allow
                                  to scale down to minReplicas pods, with a 300 second
                                  stabilization window (i.e., the highest recommendation
                                  for the last 300sec is used).
                                properties:
                                  policies:
                                    description: policies is a list of potential scaling
                                      polices which can be used during scaling. At
                                      least one policy must be specified, otherwise
                                      the HPAScalingRules will be discarded as invalid
                                    items:
                                      description: HPAScalingPolicy is a single policy
                                        which must hold true for a specified past
                                        interval.
                                      properties:
                                        periodSeconds:
                                          description: PeriodSeconds specifies the
                                            window of time for which the policy should
                                            hold true. PeriodSeconds must be greater
                                            than zero and less than or equal to 1800
                                            (30 min).
                                          format: int32
                                          type: integer
                                        type:
                                          description: Type is used to specify the
                                            scaling policy.
                                          type: string
                                        value:
                                          description: Value contains the amount of
                                            change which is permitted by the policy.
                                            It must be greater than zero
                                          format: int32
                                          type: integer
                                      required:
                                      - periodSeconds
                                      - type
                                      - value
                                      type: object
                                    type: array
                                  selectPolicy:
                                    description: selectPolicy is used to specify which
                                      policy should be used. If not set, the default
                                      value MaxPolicySelect is used.
                                    type: string
                                  stabilizationWindowSeconds:
                                    description: 'StabilizationWindowSeconds is the
                                      number of seconds for which past recommendations
                                      should be considered while scaling up or scaling
                                      down. StabilizationWindowSeconds must be greater
                                      than or equal to zero and less than or equal
                                      to 3600 (one hour). If not set, use the default
                                      values: - For scale up: 0 (i.e. no stabilization
                                      is done). - For scale down: 300 (i.e. the stabilization
                                      window is 300 seconds long).'
                                    format: int32
                                    type: integer
                                type: object
                              scaleUp:
                                description: 'scaleUp is scaling policy for scaling
                                  Up. If not set, the default value is the higher
                                  of: * increase no more than 4 pods per 60 seconds
                                  * double the number of pods per 60 seconds No stabilization
                                  is used.'
                                properties:
                                  policies:
                                    description: policies is a list of potential scaling
                                      polices which can be used during scaling. At
                                      least one policy must be specified, otherwise
                                      the HPAScalingRules will be discarded as invalid
                                    items:
                                      description: HPAScalingPolicy is a single policy
                                        which must hold true for a specified past
                                        interval.
                                      properties:
                                        periodSeconds:
                                          description: PeriodSeconds specifies the
                                            window of time for which the policy should
                                            hold true. PeriodSeconds must be greater
                                            than zero and less than or equal to 1800
                                            (30 min).
                                          format: int32
                                          type: integer
                                        type:
                                          description: Type is used to specify the
                                            scaling policy.
                                          type: string
                                        value:
                                          description: Value contains the amount of
                                            change which is permitted by the policy.
                                            It must be greater than zero
                                          format: int32
                                          type: integer
                                      required:
                                      - periodSeconds
                                      - type
                                      - value
                                      type: object
                                    type: array
                                  selectPolicy:
                                    description: selectPolicy is used to specify which
                                      policy should be used. If not set, the default
                                      value MaxPolicySelect is used.
                                    type: string
                                  stabilizationWindowSeconds:
                                    description: 'StabilizationWindowSeconds is the
                                      number of seconds for which past recommendations
                                      should be considered while scaling up or scaling
                                      down. StabilizationWindowSeconds must be greater
                                      than or equal to zero and less than or equal
                                      to 3600 (one hour). If not set, use the default
                                      values: - For scale up: 0 (i.e. no stabilization
                                      is done). - For scale down: 300 (i.e. the stabilization
                                      window is 300 seconds long).'
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          metrics:
                            description: Metrics specifies how to scale based on a
                              single metric
                            items:
                              description: MetricSpec specifies how to scale based
                                on a single metric (only `type` and one other matching
                                field should be set at once).
                              properties:
                                containerResource:
                                  description: container resource refers to a resource
                                    metric (such as those specified in requests and
                                    limits) known to Kubernetes describing a single
                                    container in each pod of the current scale target
                                    (e.g. CPU or memory). Such metrics are built in
                                    to Kubernetes, and have special scaling options
                                    on top of those available to normal per-pod metrics
                                    using the "pods" source. This is an alpha feature
                                    and can be enabled by the HPAContainerMetrics
                                    feature flag.
                                  properties:
                                    container:
                                      description: container is the name of the container
                                        in the pods of the scaling target
                                      type: string
                                    name:
                                      description: name is the name of the resource
                                        in question.
                                      type: string
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: averageUtilization is the target
                                            value of the average of the resource metric
                                            across all relevant pods, represented
                                            as a percentage of the requested value
                                            of the resource for the pods. Currently
                                            only valid for Resource metric source
                                            type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: averageValue is the target
                                            value of the average of the metric across
                                            all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - container
                                  - name
                                  - target
                                  type: object
                                external:
                                  description: external refers to a global metric
                                    that is not associated with any Kubernetes object.
                                    It allows autoscaling based on information coming
                                    from components running outside of cluster (for
                                    example length of queue in cloud messaging service,
                                    or QPS from loadbalancer running outside of cluster).
                                  properties:
                                    metric:
                                      description: metric identifies the target metric
                                        by name and selector
                                      properties:
                                        name:
                                          description: name is the name of the given
                                            metric
                                          type: string
                                        selector:
                                          description: selector is the string-encoded
                                            form of a standard kubernetes label selector
                                            for the given metric When set, it is passed
                                            as an additional parameter to the metrics
                                            server for more specific metrics scoping.
                                            When unset, just the metricName will be
                                            used to gather metrics.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: averageUtilization is the target
                                            value of the average of the resource metric
                                            across all relevant pods, represented
                                            as a percentage of the requested value
                                            of the resource for the pods. Currently
                                            only valid for Resource metric source
                                            type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: averageValue is the target
                                            value of the average of the metric across
                                            all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - metric
                                  - target
                                  type: object
                                object:
                                  description: object refers to a metric describing
                                    a single kubernetes object (for example, hits-per-second
                                    on an Ingress object).
                                  properties:
                                    describedObject:
                                      description: CrossVersionObjectReference contains
                                        enough information to let you identify the
                                        referred resource.
                                      properties:
                                        apiVersion:
                                          description: API version of the referent
                                          type: string
                                        kind:
                                          description: 'Kind of the referent; More
                                            info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                                          type: string
                                        name:
                                          description: 'Name of the referent; More
                                            info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    metric:
                                      description: metric identifies the target metric
                                        by name and selector
                                      properties:
                                        name:
                                          description: name is the name of the given
                                            metric
                                          type: string
                                        selector:
                                          description: selector is the string-encoded
                                            form of a standard kubernetes label selector
                                            for the given metric When set, it is passed
                                            as an additional parameter to the metrics
                                            server for more specific metrics scoping.
                                            When unset, just the metricName will be
                                            used to gather metrics.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: averageUtilization is the target
                                            value of the average of the resource metric
                                            across all relevant pods, represented
                                            as a percentage of the requested value
                                            of the resource for the pods. Currently
                                            only valid for Resource metric source
                                            type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: averageValue is the target
                                            value of the average of the metric across
                                            all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - describedObject
                                  - metric
                                  - target
                                  type: object
                                pods:
                                  description: pods refers to a metric describing
                                    each pod in the current scale target (for example,
                                    transactions-processed-per-second).  The values
                                    will be averaged together before being compared
                                    to the target value.
                                  properties:
                                    metric:
                                      description: metric identifies the target metric
                                        by name and selector
                                      properties:
                                        name:
                                          description: name is the name of the given
                                            metric
                                          type: string
                                        selector:
                                          description: selector is the string-encoded
                                            form of a standard kubernetes label selector
                                            for the given metric When set, it is passed
                                            as an additional parameter to the metrics
                                            server for more specific metrics scoping.
                                            When unset, just the metricName will be
                                            used to gather metrics.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: averageUtilization is the target
                                            value of the average of the resource metric
                                            across all relevant pods, represented
                                            as a percentage of the requested value
                                            of the resource for the pods. Currently
                                            only valid for Resource metric source
                                            type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: averageValue is the target
                                            value of the average of the metric across
                                            all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - metric
                                  - target
                                  type: object
                                resource:
                                  description: resource refers to a resource metric
                                    (such as those specified in requests and limits)
                                    known to Kubernetes describing each pod in the
                                    current scale target (e.g. CPU or memory). Such
                                    metrics are built in to Kubernetes, and have special
                                    scaling options on top of those available to normal
                                    per-pod metrics using the "pods" source.
                                  properties:
                                    name:
                                      description: name is the name of the resource
                                        in question.
                                      type: string
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: averageUtilization is the target
                                            value of the average of the resource metric
                                            across all relevant pods, represented
                                            as a percentage of the requested value
                                            of the resource for the pods. Currently
                                            only valid for Resource metric source
                                            type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: averageValue is the target
                                            value of the average of the metric across
                                            all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - name
                                  - target
                                  type: object
                                type:
                                  description: 'type is the type of metric source.  It
                                    should be one of "ContainerResource", "External",
                                    "Object", "Pods" or "Resource", each mapping to
                                    a matching field in the object. Note: "ContainerResource"
                                    type is available on when the feature-gate HPAContainerMetrics
                                    is enabled'
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                        type: object
                      maxReplicas:
                        description: the max numbers of target.
                        format: int32
                        type: integer
                      minReplicas:
                        description: the min numbers of target.
                        format: int32
                        type: integer
                    type: object
                  configMapInfo:
                    description: the reference for cn configMap.
                    properties:
                      configMapName:
                        description: the config info for start progress.
                        type: string
                      resolveKey:
                        description: the config response key in configmap.
                        type: string
                    type: object
                  image:
                    description: Image for a starrocks cn deployment.
                    type: string
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  name:
                    description: name of the starrocks be cluster.
                    pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                    type: string
                  probe:
                    description: Probe defines the mode probe service in container
                      is alive.
                    properties:
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated. Default to 10 seconds.
                        format: int32
                        minimum: 0
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to Kubernetes default (10 seconds). Minimum value
                          is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      type:
                        description: Type identifies the mode of probe main container
                        enum:
                        - tcp
                        - command
                        type: string
                    required:
                    - type
                    type: object
                  replicas:
                    description: Replicas is the number of desired cn Pod.
                    format: int32
                    minimum: 0
                    type: integer
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  service:
                    description: Service defines the template for the associated Kubernetes
                      Service object. the service for user access cn.
                    properties:
                      name:
                        description: Name assigned to service.
                        pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                        type: string
                      ports:
                        description: Ports the components exposed ports and listen
                          ports in pod.
                        items:
                          properties:
                            containerPort:
                              description: ContainerPort the service listen in pod.
                              format: int32
                              type: integer
                            name:
                              description: Name of the map about coming port and target
                                port
                              type: string
                            nodePort:
                              description: The easiest way to expose fe, cn or be
                                is to use a Service of type `NodePort`.
                              format: int32
                              type: integer
                            port:
                              description: Port the pod is exposed on service.
                              format: int32
                              type: integer
                          required:
                          - containerPort
                          - port
                          type: object
                        type: array
                      type:
                        description: 'type of service,the possible value for the service
                          type are : ClusterIP, NodePort, LoadBalancer,ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                        type: string
                    type: object
                required:
                - image
                type: object
              starRocksFeSpec:
                description: StarRocksFeSpec define fe configuration of the starrocks
                  cluster.
                properties:
                  configMapInfo:
                    description: the reference for fe configMap.
                    properties:
                      configMapName:
                        description: the config info for start progress.
                        type: string
                      resolveKey:
                        description: the config response key in configmap.
                        type: string
                    type: object
                  image:
                    description: Image for a starrocks fe deployment..
                    type: string
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  name:
                    description: name of the starrocks be cluster.
                    pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                    type: string
                  probe:
                    description: Probe defines the mode probe service in container
                      is alive.
                    properties:
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated. Default to 10 seconds.
                        format: int32
                        minimum: 0
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to Kubernetes default (10 seconds). Minimum value
                          is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      type:
                        description: Type identifies the mode of probe main container
                        enum:
                        - tcp
                        - command
                        type: string
                    required:
                    - type
                    type: object
                  replicas:
                    description: Replicas is the number of desired fe Pod, the number
                      is 1,3,5
                    format: int32
                    type: integer
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  service:
                    description: Service defines the template for the associated Kubernetes
                      Service object.
                    properties:
                      name:
                        description: Name assigned to service.
                        pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                        type: string
                      ports:
                        description: Ports the components exposed ports and listen
                          ports in pod.
                        items:
                          properties:
                            containerPort:
                              description: ContainerPort the service listen in pod.
                              format: int32
                              type: integer
                            name:
                              description: Name of the map about coming port and target
                                port
                              type: string
                            nodePort:
                              description: The easiest way to expose fe, cn or be
                                is to use a Service of type `NodePort`.
                              format: int32
                              type: integer
                            port:
                              description: Port the pod is exposed on service.
                              format: int32
                              type: integer
                          required:
                          - containerPort
                          - port
                          type: object
                        type: array
                      type:
                        description: 'type of service,the possible value for the service
                          type are : ClusterIP, NodePort, LoadBalancer,ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                        type: string
                    type: object
                  storageVolumes:
                    description: StorageVolumes defines the additional storage for
                      fe
                    items:
                      description: StorageVolume defines additional PVC template for
                        StatefulSets and volumeMount for pods that mount this PVC
                      properties:
                        mountPath:
                          description: MountPath specify the path of volume mount.
                          type: string
                        name:
                          description: name of a storage volume.
                          pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                          type: string
                        storageClassName:
                          description: 'storageClassName is the name of the StorageClass
                            required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        storageSize:
                          description: 'StorageSize is a valid memory size type based
                            on powers-of-2, so 1Mi is 1024Ki. Supported units:Mi,
                            Gi, GiB, Ti, Ti, Pi, Ei, Ex: `512Mi`.'
                          pattern: (^0|([0-9]*l[.])?[0-9]+((M|G|T|E|P)i))$
                          type: string
                      required:
                      - name
                      - storageSize
                      type: object
                    type: array
                required:
                - image
                type: object
            type: object
          status:
            description: Most recent observed status of the starrocks cluster
            properties:
              phase:
                description: 'Represents the state of cluster. the possible value
                  are: running, failed, pending'
                type: string
              starRocksBeStatus:
                description: Represents the status of be. the status have running,
                  failed and creating pods.
                properties:
                  creatingInstances:
                    description: CreatingInstances represents status in creating pods
                      of be.
                    items:
                      type: string
                    type: array
                  failedInstances:
                    description: FailedInstances deploy failed instance of be.
                    items:
                      type: string
                    type: array
                  phase:
                    description: Phase the value from all pods of be status. If be
                      have one failed pod phase=failed, also if be have one creating
                      pod phase=creating, also if be all running phase=running, others
                      unknown.
                    type: string
                  reason:
                    description: the reason for the phase.
                    type: string
                  resourceNames:
                    description: The statefulset names of be.
                    items:
                      type: string
                    type: array
                  runningInstances:
                    description: RunningInstances represents status in running pods
                      of be.
                    items:
                      type: string
                    type: array
                  serviceName:
                    description: the name of be service for fe find be instance.
                    type: string
                required:
                - phase
                type: object
              starRocksCnStatus:
                description: Represents the status of cn. the status have running,
                  failed and creating pods.
                properties:
                  HpaName:
                    description: The policy name of autoScale.
                    type: string
                  creatingInstances:
                    description: CreatingInstances represents status in creating pods
                      of cn.
                    items:
                      type: string
                    type: array
                  failedInstances:
                    description: FailedInstances deploy failed instance of cn.
                    items:
                      type: string
                    type: array
                  phase:
                    description: Phase the value from all pods of cn status. If cn
                      have one failed pod phase=failed, also if cn have one creating
                      pod phase=creating, also if cn all running phase=running, others
                      unknown.
                    type: string
                  reason:
                    description: the reason for the phase.
                    type: string
                  resourceNames:
                    description: The statefulset names of be.
                    items:
                      type: string
                    type: array
                  runningInstances:
                    description: RunningInstances represents status in running pods
                      of cn.
                    items:
                      type: string
                    type: array
                  serviceName:
                    description: the name of cn service for fe find cn instance.
                    type: string
                required:
                - phase
                type: object
              starRocksFeStatus:
                description: Represents the status of fe. the status have running,
                  failed and creating pods.
                properties:
                  creatingInstances:
                    description: CreatingInstances represents the creating pods of
                      fe.
                    items:
                      type: string
                    type: array
                  failedInstances:
                    description: FailedInstances represents the failed pods of fe.
                    items:
                      type: string
                    type: array
                  phase:
                    description: Phase the value from all pods of fe status. If fe
                      have one failed pod phase=failed, also if fe have one creating
                      pod phase=creating, also if fe all running phase=running, others
                      unknown.
                    type: string
                  reason:
                    description: Reason represents the reason of not running.
                    type: string
                  resourceNames:
                    description: ResourceNames the statefulset names of fe in v1alpha1
                      version.
                    items:
                      type: string
                    type: array
                  runningInstances:
                    description: RunningInstances represents the running pods of fe.
                    items:
                      type: string
                    type: array
                  serviceName:
                    description: the name of fe service exposed for user.
                    type: string
                required:
                - phase
                type: object
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
