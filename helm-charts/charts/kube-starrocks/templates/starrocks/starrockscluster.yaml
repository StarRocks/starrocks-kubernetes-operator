apiVersion: starrocks.com/{{ .Values.global.crdVersion }}
kind: StarRocksCluster
metadata:
  name: {{ template "starrockscluster.name" . }}
  namespace: {{ template "starrockscluster.namespace" . }}
  labels:
    cluster: {{ template "starrockscluster.name" . }}
{{- include "kube-starrocks.labels" . | nindent 4 }}
{{- if .Values.starrocksCluster.annotations }}
  annotations:
    {{ toYaml .Values.starrocksCluster.annotations | nindent 4 }}
{{- end }}
spec:
  starRocksFeSpec:
    image: "{{ .Values.starrocksFESpec.image.repository }}:{{ .Values.starrocksFESpec.image.tag }}"
    replicas: {{ .Values.starrocksFESpec.replicas }}
    {{- /*
    support both resources and resource for backward compatibility
    */}}
    {{- if .Values.starrocksFESpec.resources }}
    {{- toYaml .Values.starrocksFESpec.resources | nindent 4 }}
    {{- else if .Values.starrocksFESpec.resource }}
    {{- toYaml .Values.starrocksFESpec.resource | nindent 4 }}
    {{- end }}
{{- if .Values.starrocksFESpec.service.type }}
    service:
      type: {{ .Values.starrocksFESpec.service.type }}
{{- if and (eq "LoadBalancer" .Values.starrocksFESpec.service.type) .Values.starrocksFESpec.service.loadbalancerIP }}
      loadBalancerIP: {{ .Values.starrocksFESpec.service.loadbalancerIP }}
{{- end }}
{{- if .Values.starrocksFESpec.service.annotations }}
      annotations:
{{ toYaml .Values.starrocksFESpec.service.annotations | indent 8 }}
{{- end }}
{{- end }}
    annotations:
      app.starrocks.io/fe-config-hash: {{template "starrockscluster.fe.config.hash" . }}
{{- if .Values.starrocksFESpec.annotations }}
{{ toYaml .Values.starrocksFESpec.annotations | indent 6 }}
{{- end }}
{{- if .Values.starrocksFESpec.imagePullSecrets }}
    imagePullSecrets:
{{toYaml .Values.starrocksFESpec.imagePullSecrets | indent 4 }}
{{- end }}
{{- if .Values.starrocksFESpec.serviceAccount }}
    serviceAccount: {{ .Values.starrocksFESpec.serviceAccount }}
{{- end }}
    fsGroup: {{ .Values.starrocksFESpec.fsGroup }}
{{- if .Values.starrocksFESpec.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.starrocksFESpec.nodeSelector | indent 6 }}
{{- end }}
{{- if .Values.starrocksFESpec.podLabels }}
    podLabels:
{{toYaml .Values.starrocksFESpec.podLabels | indent 6 }}
{{- end }}
{{- if .Values.starrocksFESpec.hostAliases }}
    hostAliases:
{{toYaml .Values.starrocksFESpec.hostAliases | indent 4 }}
{{- end }}
{{- if .Values.starrocksFESpec.schedulerName }}
    schedulerName: {{ .Values.starrocksFESpec.schedulerName }}
{{- end }}
{{- if or .Values.starrocksFESpec.feEnvVars .Values.initPassword.enabled }}
    feEnvVars:
    {{- if and .Values.initPassword.enabled .Values.starrocksFESpec.feEnvVars | toJson | contains "MYSQL_PWD" | not }}
      - name: "MYSQL_PWD"
        valueFrom:
          secretKeyRef:
            name: {{ template "kube-starrocks.name" . }}-credential
            key: password
    {{- end }}
    {{- if .Values.starrocksFESpec.feEnvVars }}
      {{- toYaml .Values.starrocksFESpec.feEnvVars | nindent 6 }}
    {{- end }}
{{- end }}

{{- if .Values.starrocksFESpec.affinity }}
    affinity:
{{ toYaml .Values.starrocksFESpec.affinity | indent 6 }}
{{- end }}
{{- if .Values.starrocksFESpec.tolerations }}
    tolerations:
{{toYaml .Values.starrocksFESpec.tolerations | indent 4 }}
{{- end }}
{{- if .Values.starrocksFESpec.secrets }}
    secrets:
    {{- range .Values.starrocksFESpec.secrets }}
    - name: {{ .name }}
      mountPath: {{ .mountPath }}
    {{- end }}
{{- end }}
{{- if .Values.starrocksFESpec.configMaps }}
    configMaps:
    {{- range .Values.starrocksFESpec.configMaps }}
      - name: {{ .name }}
        mountPath: {{ .mountPath }}
    {{- end }}
{{- end }}
    configMapInfo:
      configMapName: {{ template  "starrockscluster.fe.configmap.name" . }}
      resolveKey: fe.conf
{{- if .Values.starrocksFESpec.storageSpec.name }}
    storageVolumes:
    - name: {{ .Values.starrocksFESpec.storageSpec.name }}{{ template "starrockscluster.fe.meta.suffix" . }}
{{- if .Values.starrocksFESpec.storageSpec.storageClassName }}
      storageClassName: {{ .Values.starrocksFESpec.storageSpec.storageClassName }}
{{- end }}
{{- if .Values.starrocksFESpec.storageSpec.storageSize }}
      storageSize: {{ .Values.starrocksFESpec.storageSpec.storageSize }}
{{- end }}
      mountPath: {{ template "starrockscluster.fe.meta.path" . }}
{{- if .Values.starrocksFESpec.storageSpec.logStorageSize }}
    - name: {{ .Values.starrocksFESpec.storageSpec.name }}{{ template "starrockscluster.fe.log.suffix" . }}
{{- if .Values.starrocksFESpec.storageSpec.storageClassName }}
      storageClassName: {{ .Values.starrocksFESpec.storageSpec.storageClassName }}
{{- end }}
{{- if .Values.starrocksFESpec.storageSpec.logStorageSize }}
      storageSize: {{ .Values.starrocksFESpec.storageSpec.logStorageSize }}
{{- end }}      
      mountPath: {{ template "starrockscluster.fe.log.path" . }}
{{- end }}
{{- end }}

{{- if .Values.starrocksBeSpec }}
  starRocksBeSpec:
    image: "{{ .Values.starrocksBeSpec.image.repository }}:{{ .Values.starrocksBeSpec.image.tag }}"
    replicas: {{ .Values.starrocksBeSpec.replicas }}
    {{- /*
    support both resources and resource for backward compatibility
    */}}
    {{- if .Values.starrocksBeSpec.resources }}
    {{- toYaml .Values.starrocksBeSpec.resources | nindent 4 }}
    {{- else if .Values.starrocksBeSpec.resource }}
    {{- toYaml .Values.starrocksBeSpec.resource | nindent 4 }}
    {{- end }}
{{- if .Values.starrocksBeSpec.service.type }}
    service:
      type: {{ .Values.starrocksBeSpec.service.type }}
{{- if and (eq "LoadBalancer" .Values.starrocksBeSpec.service.type) .Values.starrocksBeSpec.service.loadbalancerIP }}
      loadBalancerIP: {{ .Values.starrocksBeSpec.service.loadbalancerIP }}
{{- end }}
{{- if .Values.starrocksBeSpec.service.annotations }}
      annotations:
{{ toYaml .Values.starrocksBeSpec.service.annotations | indent 8 }}
{{- end }}
{{- end }}
    annotations:
      app.starrocks.io/be-config-hash: {{template "starrockscluster.be.config.hash" . }}
{{- if .Values.starrocksBeSpec.annotations }}
{{ toYaml .Values.starrocksBeSpec.annotations | indent 6 }}
{{- end }}
{{- if .Values.starrocksBeSpec.imagePullSecrets }}
    imagePullSecrets:
{{toYaml .Values.starrocksBeSpec.imagePullSecrets | indent 4 }}
{{- end }}
{{- if .Values.starrocksBeSpec.serviceAccount }}
    serviceAccount: {{ .Values.starrocksBeSpec.serviceAccount }}
{{- end }}
    fsGroup: {{ .Values.starrocksBeSpec.fsGroup }}
{{- if .Values.starrocksBeSpec.podLabels }}
    podLabels:
{{toYaml .Values.starrocksBeSpec.podLabels | indent 6 }}
{{- end }}
{{- if .Values.starrocksBeSpec.hostAliases }}
    hostAliases:
{{toYaml .Values.starrocksBeSpec.hostAliases | indent 4 }}
{{- end }}
{{- if .Values.starrocksBeSpec.schedulerName }}
    schedulerName: {{ .Values.starrocksBeSpec.schedulerName }}
{{- end }}
{{- if .Values.starrocksBeSpec.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.starrocksBeSpec.nodeSelector | indent 6 }}
{{- end }}
{{- if or .Values.starrocksBeSpec.beEnvVars .Values.initPassword.enabled }}
    beEnvVars:
    {{- if and .Values.initPassword.enabled .Values.starrocksBeSpec.beEnvVars | toJson | contains "MYSQL_PWD" | not }}
      - name: "MYSQL_PWD"
        valueFrom:
          secretKeyRef:
            name: {{ template "kube-starrocks.name" . }}-credential
            key: password
    {{- end }}
    {{- if .Values.starrocksBeSpec.beEnvVars }}
      {{- toYaml .Values.starrocksBeSpec.beEnvVars | nindent 6 }}
    {{- end }}
{{- end }}

{{- if .Values.starrocksBeSpec.affinity }}
    affinity:
{{ toYaml .Values.starrocksBeSpec.affinity | indent 6 }}
{{- end }}
{{- if .Values.starrocksBeSpec.tolerations }}
    tolerations:
{{toYaml .Values.starrocksBeSpec.tolerations | indent 4 }}
{{- end }}
{{- if .Values.starrocksBeSpec.secrets }}
    secrets:
    {{- range .Values.starrocksBeSpec.secrets }}
    - name: {{ .name }}
      mountPath: {{ .mountPath }}
    {{- end }}
{{- end }}
{{- if .Values.starrocksBeSpec.configMaps }}
    configMaps:
    {{- range .Values.starrocksBeSpec.configMaps }}
      - name: {{ .name }}
        mountPath: {{ .mountPath }}
    {{- end }}
{{- end }}
    configMapInfo:
      configMapName: {{template "starrockscluster.be.configmap.name" . }}
      resolveKey: be.conf
{{- if .Values.starrocksBeSpec.storageSpec.name }}
    storageVolumes:
    - name: {{ .Values.starrocksBeSpec.storageSpec.name }}{{template "starrockscluster.be.data.suffix" . }}
{{- if .Values.starrocksBeSpec.storageSpec.storageClassName }}
      storageClassName: {{ .Values.starrocksBeSpec.storageSpec.storageClassName }}
{{- end }}
{{- if .Values.starrocksBeSpec.storageSpec.storageSize }}
      storageSize: {{ .Values.starrocksBeSpec.storageSpec.storageSize }}
{{- end }}
      mountPath: {{template "starrockscluster.be.data.path" . }}
{{- if .Values.starrocksBeSpec.storageSpec.logStorageSize }}
    - name: {{ .Values.starrocksBeSpec.storageSpec.name }}{{template "starrockscluster.be.log.suffix" . }}
{{- if .Values.starrocksBeSpec.storageSpec.storageClassName }}
      storageClassName: {{ .Values.starrocksBeSpec.storageSpec.storageClassName }}
{{- end }}
{{- if .Values.starrocksBeSpec.storageSpec.logStorageSize }}
      storageSize: {{ .Values.starrocksBeSpec.storageSpec.logStorageSize }}
{{- end }}
      mountPath: {{template "starrockscluster.be.log.path" . }}
{{- end }}
{{- end }}
{{- end }}

{{- if .Values.starrocksCluster.enabledCn }}
  starRocksCnSpec:
    image: "{{ .Values.starrocksCnSpec.image.repository }}:{{ .Values.starrocksCnSpec.image.tag }}"
{{- if .Values.starrocksCnSpec.serviceAccount }}
    serviceAccount: {{ .Values.starrocksCnSpec.serviceAccount }}
{{- end }}
    fsGroup: {{ .Values.starrocksCnSpec.fsGroup }}
{{- if .Values.starrocksCnSpec.podLabels }}
    podLabels:
{{toYaml .Values.starrocksCnSpec.podLabels | indent 6 }}
{{- end }}
{{- if .Values.starrocksCnSpec.hostAliases }}
    hostAliases:
{{toYaml .Values.starrocksCnSpec.hostAliases | indent 4 }}
{{- end }}
{{- if .Values.starrocksCnSpec.schedulerName }}
    schedulerName: {{ .Values.starrocksCnSpec.schedulerName }}
{{- end }}
{{- if .Values.starrocksCnSpec.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.starrocksCnSpec.nodeSelector | indent 6 }}
{{- end }}
{{- if or .Values.starrocksCnSpec.cnEnvVars .Values.initPassword.enabled }}
    cnEnvVars:
    {{- if and .Values.initPassword.enabled .Values.starrocksCnSpec.cnEnvVars | toJson | contains "MYSQL_PWD" | not }}
      - name: "MYSQL_PWD"
        valueFrom:
          secretKeyRef:
            name: {{ template "kube-starrocks.name" . }}-credential
            key: password
    {{- end }}
    {{- if .Values.starrocksCnSpec.cnEnvVars }}
      {{- toYaml .Values.starrocksCnSpec.cnEnvVars | nindent 6 }}
    {{- end }}
{{- end }}
{{- if .Values.starrocksCnSpec.affinity }}
    affinity:
{{ toYaml .Values.starrocksCnSpec.affinity | indent 6 }}
{{- end }}
{{- if .Values.starrocksCnSpec.tolerations }}
    tolerations:
{{toYaml .Values.starrocksCnSpec.tolerations | indent 4 }}
{{- end }}
{{- if and .Values.starrocksCluster.enabledCn .Values.starrocksCnSpec.autoScalingPolicy }}
    autoScalingPolicy:
{{ toYaml .Values.starrocksCnSpec.autoScalingPolicy | indent 6 }}
{{- end }}
    {{- /*
    support both resources and resource for backward compatibility
    */}}
    {{- if .Values.starrocksCnSpec.resources }}
    {{- toYaml .Values.starrocksCnSpec.resources | nindent 4 }}
    {{- else if .Values.starrocksCnSpec.resource }}
    {{- toYaml .Values.starrocksCnSpec.resource | nindent 4 }}
    {{- end }}
{{- if .Values.starrocksCnSpec.service.type }}
    service:
      type: {{ .Values.starrocksCnSpec.service.type }}
{{- if and (eq "LoadBalancer" .Values.starrocksCnSpec.service.type) .Values.starrocksCnSpec.service.loadbalancerIP }}
      loadBalancerIP: {{ .Values.starrocksCnSpec.service.loadbalancerIP }}
{{- end }}
{{- if .Values.starrocksCnSpec.service.annotations }}
      annotations:
{{ toYaml .Values.starrocksCnSpec.service.annotations | indent 8 }}
{{- end }}
{{- end }}
    annotations:
      app.starrocks.io/cn-config-hash: {{template "starrockscluster.cn.config.hash" . }}
{{- if .Values.starrocksCnSpec.annotations }}
{{ toYaml .Values.starrocksCnSpec.annotations | indent 6 }}
{{- end }}
{{- if .Values.starrocksCnSpec.imagePullSecrets }}
    imagePullSecrets:
{{toYaml .Values.starrocksCnSpec.imagePullSecrets | indent 4 }}
{{- end }}
{{- if .Values.starrocksCnSpec.secrets }}
    secrets:
    {{- range .Values.starrocksCnSpec.secrets }}
    - name: {{ .name }}
      mountPath: {{ .mountPath }}
    {{- end }}
{{- end }}
{{- if .Values.starrocksCnSpec.configMaps }}
    configMaps:
    {{- range .Values.starrocksCnSpec.configMaps }}
      - name: {{ .name }}
        mountPath: {{ .mountPath }}
    {{- end }}
{{- end }}
    configMapInfo:
      configMapName: {{template  "starrockscluster.cn.configmap.name" . }}
      resolveKey: cn.conf
{{- end }}
